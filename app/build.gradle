apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.fachrudin.project"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.1"
        multiDexEnabled true
        resConfigs "en"
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        if (rootProject.file('signing-debug.properties').exists()) {
            def signingDebug = new Properties()
            signingDebug.load(new FileInputStream(rootProject.file('signing-debug.properties')))
            debug {
                storeFile rootProject.file(signingDebug.storeFile)
                storePassword signingDebug.storePassword
                keyAlias signingDebug.keyAlias
                keyPassword signingDebug.keyPassword
            }
        }
        if (rootProject.file('signing-release.properties').exists()) {
            def signingRelease = new Properties()
            signingRelease.load(new FileInputStream(rootProject.file('signing-release.properties')))
            release {
                storeFile rootProject.file(signingRelease.storeFile)
                storePassword signingRelease.storePassword
                keyAlias signingRelease.keyAlias
                keyPassword signingRelease.keyPassword
            }
        }
    }
    buildTypes {
        debug {
            buildConfigField 'String', 'API_SAMPLE', '"https://jsonplaceholder.typicode.com"'
            buildConfigField 'String', 'API_BASE', '"https://api.github.com"'
            buildConfigField 'String', 'API_VERSION', '"0.0.1"'
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField 'String', 'API_SAMPLE', '"https://jsonplaceholder.typicode.com"'
            buildConfigField 'String', 'API_BASE', '"https://api.github.com"'
            buildConfigField 'String', 'API_VERSION', '"0.0.1"'
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "env"
    productFlavors {
        dev {
            dimension "env"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        prod {
            dimension "env"
        }
    }
    android.variantFilter { variant ->
        if (variant.buildType.name == ('release')) {
            variant.getFlavors().each { flavor ->
                if (flavor.dimension == ('env') && flavor.name == ('dev')) {
                    variant.setIgnore(true)
                }
            }
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "project-${variant.versionName}.apk"
        }
    }

    lintOptions {
        abortOnError false
        ignoreWarnings true
        quiet true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/dependencies'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        return void
    }
    bundle {
        language { enableSplit = true }
        density { enableSplit = true }
        abi { enableSplit = true }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    // android support
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'

    // viewModel and liveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    // eventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    // dagger
    implementation 'com.google.dagger:dagger:2.21'
    kapt 'com.google.dagger:dagger-compiler:2.21'

    // firebase
    implementation 'com.google.firebase:firebase-core:16.0.7'

    // network
    implementation "io.reactivex.rxjava2:rxjava:2.2.4"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"
    implementation "com.squareup.retrofit2:retrofit:2.5.0"
    implementation "com.squareup.retrofit2:converter-gson:2.5.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.5.0"
    implementation "com.squareup.okhttp3:okhttp:3.12.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.12.0"

    // glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'
}
